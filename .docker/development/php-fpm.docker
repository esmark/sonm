FROM php:7.3-fpm

RUN apt-get update && apt-get install -y \
    apt-utils \
    gnupg \
    lsb-release \
    libbz2-dev \
    libfreetype6-dev \
    libgmp-dev \
    libjpeg-dev \
    libjpeg62-turbo-dev \
    libicu-dev \
    libmemcached-dev \
    libpq-dev \
    libpng-dev \
    libzip-dev \
    libxpm-dev \
    libxml2-dev \
    mariadb-client \
    g++ \
    wget \
    unzip \
    zlib1g-dev \
    zip

# PostgreSQL 12
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |tee  /etc/apt/sources.list.d/pgdg.list
RUN apt-get update
RUN apt-get install postgresql-client -y

RUN docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql

RUN docker-php-ext-install -j$(nproc) bcmath \
    && docker-php-ext-install -j$(nproc) bz2 \
    && docker-php-ext-install -j$(nproc) exif \
    && docker-php-ext-install -j$(nproc) gmp \
    && docker-php-ext-install -j$(nproc) intl \
    && docker-php-ext-install -j$(nproc) mysqli \
    && docker-php-ext-install -j$(nproc) opcache \
    && docker-php-ext-install -j$(nproc) pgsql \
    && docker-php-ext-install -j$(nproc) pdo_pgsql \
    && docker-php-ext-install -j$(nproc) pdo_mysql \
    && docker-php-ext-install -j$(nproc) soap \
    && docker-php-ext-install -j$(nproc) sockets \
    && docker-php-ext-install -j$(nproc) zip

RUN pecl install apcu \
    && pecl install memcached \
    && pecl install redis \
    && pecl install timezonedb

RUN docker-php-ext-enable apcu \
    && docker-php-ext-enable memcached \
    && docker-php-ext-enable redis \
    && docker-php-ext-enable timezonedb

RUN apt-get install -y imagemagick libmagickcore-dev libmagickwand-dev \
    && pecl install imagick \
    && docker-php-ext-enable imagick

RUN docker-php-ext-configure gd \
        --with-gd \
        --with-freetype-dir=/usr/include/ \
        --with-jpeg-dir=/usr/include/ \
        --with-xpm-dir=/usr/lib/x86_64-linux-gnu \
    && docker-php-ext-install -j$(nproc) gd

# RUN pecl install xdebug && docker-php-ext-enable xdebug

# COPY ./php/opcache.ini /usr/local/etc/php/conf.d/opcache.ini
# COPY ./php/xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/bin --filename=composer --quiet

ENV COMPOSER_ALLOW_SUPERUSER 1

WORKDIR /app
